import os
import sys
import json

if len(sys.argv) < 1:
    print("NEED A DIRECTORY")
    exit(0)
dir = sys.argv[1]
random=False
for arg in sys.argv:
    if arg == "-random":
        random=True

def getListOfFiles(dirName='./'):
    listOfFiles = os.listdir(dirName)
    allFiles = []

    for entry in listOfFiles:
        fullPath = os.path.join(dirName, entry)
        if os.path.isdir(fullPath):
            allFiles = allFiles + getListOfFiles(fullPath)
        else:
            allFiles.append(fullPath)
    return allFiles

#All files which have weapons in them (probably)
allFiles = getListOfFiles(dir)

#Get all weapon info
weaponTiers = {}
for entry in allFiles:
    if entry.split('\\')[-1].startswith('Item_Weapon'):
        with open(entry, 'r') as f:
            data = f.read()
            try:
                data = json.loads(data)
            except:
                continue

            id = data["id"]
            tier = data["tier"]
            if tier not in weaponTiers:
                weaponTiers[tier] = []
            weaponTiers[tier].append(id)

#Write json files to folder
if not os.path.exists("EasySurvival"):
    os.makedirs("EasySurvival")
os.chdir("EasySurvival")

#Generate manifest
with open("manifest.json", 'w') as f:
    manifestContents = {}
    manifestContents["Name"] = "Easy Survival"
    manifestContents["Description"] = "Generated by script to bring modded weapons into survival"
    manifestContents["Author"] = "ColbyJack"
    manifestContents["ModVersion"] = "1.0"
    manifestContents["GameVersion"] = "0.11.0.0"
    f.write(json.dumps(manifestContents, indent=4))

#Write loot tables
for i in range(5):
    lootTableContents = {}
    lootTableContents["$type"] = "ThunderRoad.LootTable, Assembly-CSharp"
    lootTableContents["id"] = "AllTier%s"%(i)
    lootTableContents["saveFolder"] = "Bas"
    lootTableContents["version"] = 1

    lootTableContents["drops"] = []

    items = []
    if i in weaponTiers:
        items = weaponTiers[i]

    for item in items:
        itemData = {}
        itemData["reference"] = 0
        itemData["referenceID"] = item
        itemData["probabilityWeight"] = 1.0
        lootTableContents["drops"].append(itemData)

    with open('LootTable_AllTier%s.json'%(i), 'w') as f:
        f.write(json.dumps(lootTableContents, indent=4))

#Write survivalrewards (if not exists)
for i in range(1,11):
    if random:
        fileContents = {}
        fileContents["$type"] = "ThunderRoad.LootTable, Assembly-CSharp"
        fileContents["id"] = "SurvivalRewards%s"%(i)
        fileContents["saveFolder"] = "Bas"
        fileContents["version"] = 1
        fileContents["drops"] = []

        for tier in weaponTiers:
            for item in weaponTiers[tier]:
                dropsContent = {}
                dropsContent['reference'] = 0
                dropsContent["referenceID"] = item
                dropsContent["probabilityWeight"] = 10.0
                fileContents["drops"].append(dropsContent)
    else:
        fileContents = {}
        fileContents["$type"] = "ThunderRoad.LootTable, Assembly-CSharp"
        fileContents["id"] = "SurvivalRewards%s"%(i)
        fileContents["saveFolder"] = "Bas"
        fileContents["version"] = 1
        fileContents["drops"] = []

        #Just make an even distribution of tiers based on the survival level
        for j in range(5):
            dropsContent = {}
            dropsContent["referenceID"] = "AllTier%s"%(j)
            dropsContent["reference"] = "Table"
            try:
                dropsContent["probabilityWeight"] = 1.0 / abs((j+1)*2-i)
            except ZeroDivisionError:
                dropsContent["probabilityWeight"] = 1.0
            dropsContent["probabilityWeight"] *= 100

            fileContents["drops"].append(dropsContent)

    with open("LootTable_SurvivalRewards%s.json"%(i), 'w') as f:
        f.write(json.dumps(fileContents, indent=4))
